Check unary multiplication language by Unrestricted Grammar: True is done in 0:00:08.209587 seconds
S                                  : 1) S -> 1 * A 1 = 1    : 1 * A 1 = 1                       
1 * A 1 = 1                        : 2) A -> A 1 C          : 1 * A 1 C 1 = 1                   
1 * A 1 C 1 = 1                    : 7) C 1 -> 1 C          : 1 * A 1 1 C = 1                   
1 * A 1 1 C = 1                    : 8) C = -> = 1          : 1 * A 1 1 = 1 1                   
1 * A 1 1 = 1 1                    : 3) * A -> * D          : 1 * D 1 1 = 1 1                   
1 * D 1 1 = 1 1                    : 4) 1 * D -> 1 1 * D B  : 1 1 * D B 1 1 = 1 1               
1 1 * D B 1 1 = 1 1                : 5) B 1 -> C 1 B        : 1 1 * D C 1 B 1 = 1 1             
1 1 * D C 1 B 1 = 1 1              : 7) C 1 -> 1 C          : 1 1 * D 1 C B 1 = 1 1             
1 1 * D 1 C B 1 = 1 1              : 5) B 1 -> C 1 B        : 1 1 * D 1 C C 1 B = 1 1           
1 1 * D 1 C C 1 B = 1 1            : 6) B = -> =            : 1 1 * D 1 C C 1 = 1 1             
1 1 * D 1 C C 1 = 1 1              : 7) C 1 -> 1 C          : 1 1 * D 1 C 1 C = 1 1             
1 1 * D 1 C 1 C = 1 1              : 8) C = -> = 1          : 1 1 * D 1 C 1 = 1 1 1             
1 1 * D 1 C 1 = 1 1 1              : 7) C 1 -> 1 C          : 1 1 * D 1 1 C = 1 1 1             
1 1 * D 1 1 C = 1 1 1              : 8) C = -> = 1          : 1 1 * D 1 1 = 1 1 1 1             
1 1 * D 1 1 = 1 1 1 1              : 4) 1 * D -> 1 1 * D B  : 1 1 1 * D B 1 1 = 1 1 1 1         
1 1 1 * D B 1 1 = 1 1 1 1          : 4) 1 * D -> 1 1 * D B  : 1 1 1 1 * D B B 1 1 = 1 1 1 1     
1 1 1 1 * D B B 1 1 = 1 1 1 1      : 9) 1 * D -> 1 *        : 1 1 1 1 * B B 1 1 = 1 1 1 1       
1 1 1 1 * B B 1 1 = 1 1 1 1        : 5) B 1 -> C 1 B        : 1 1 1 1 * B C 1 B 1 = 1 1 1 1     
1 1 1 1 * B C 1 B 1 = 1 1 1 1      : 7) C 1 -> 1 C          : 1 1 1 1 * B 1 C B 1 = 1 1 1 1     
1 1 1 1 * B 1 C B 1 = 1 1 1 1      : 5) B 1 -> C 1 B        : 1 1 1 1 * B 1 C C 1 B = 1 1 1 1   
1 1 1 1 * B 1 C C 1 B = 1 1 1 1    : 6) B = -> =            : 1 1 1 1 * B 1 C C 1 = 1 1 1 1     
1 1 1 1 * B 1 C C 1 = 1 1 1 1      : 7) C 1 -> 1 C          : 1 1 1 1 * B 1 C 1 C = 1 1 1 1     
1 1 1 1 * B 1 C 1 C = 1 1 1 1      : 8) C = -> = 1          : 1 1 1 1 * B 1 C 1 = 1 1 1 1 1     
1 1 1 1 * B 1 C 1 = 1 1 1 1 1      : 7) C 1 -> 1 C          : 1 1 1 1 * B 1 1 C = 1 1 1 1 1     
1 1 1 1 * B 1 1 C = 1 1 1 1 1      : 8) C = -> = 1          : 1 1 1 1 * B 1 1 = 1 1 1 1 1 1     
1 1 1 1 * B 1 1 = 1 1 1 1 1 1      : 5) B 1 -> C 1 B        : 1 1 1 1 * C 1 B 1 = 1 1 1 1 1 1   
1 1 1 1 * C 1 B 1 = 1 1 1 1 1 1    : 7) C 1 -> 1 C          : 1 1 1 1 * 1 C B 1 = 1 1 1 1 1 1   
1 1 1 1 * 1 C B 1 = 1 1 1 1 1 1    : 5) B 1 -> C 1 B        : 1 1 1 1 * 1 C C 1 B = 1 1 1 1 1 1 
1 1 1 1 * 1 C C 1 B = 1 1 1 1 1 1  : 6) B = -> =            : 1 1 1 1 * 1 C C 1 = 1 1 1 1 1 1   
1 1 1 1 * 1 C C 1 = 1 1 1 1 1 1    : 7) C 1 -> 1 C          : 1 1 1 1 * 1 C 1 C = 1 1 1 1 1 1   
1 1 1 1 * 1 C 1 C = 1 1 1 1 1 1    : 8) C = -> = 1          : 1 1 1 1 * 1 C 1 = 1 1 1 1 1 1 1   
1 1 1 1 * 1 C 1 = 1 1 1 1 1 1 1    : 7) C 1 -> 1 C          : 1 1 1 1 * 1 1 C = 1 1 1 1 1 1 1   
1 1 1 1 * 1 1 C = 1 1 1 1 1 1 1    : 8) C = -> = 1          : 1 1 1 1 * 1 1 = 1 1 1 1 1 1 1 1   
